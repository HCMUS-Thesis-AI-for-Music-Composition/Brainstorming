angular.module("genres",[]),angular.module("genres").config(function(){}),angular.module("genres").controller("MainCtrl",["$scope","$http","$rootScope","GenreService","AuthService","$interval","$log",function(e,n,t,i,r,o,s){"use strict";e.open=!1,e.genresInit=function(n){i.get(n).then(function(n){e.genres=n})},e.genresSelect=function(n,t){e.isGuest?r.get().then(function(i){!0===i.isGuest?hooktheoryLogin("Please sign in to update genres."):(e.isGuest=!1,e.genresSelectContinue(n,t))}):e.genresSelectContinue(n,t)},e.genresSelectContinue=function(n,t){t.active?(t.loading=!0,i.delete(n,t.id).then(function(n){e.genres=n})):(t.loading=!0,i.post(n,t.id).then(function(n){e.genres=n}))}}]),angular.module("genres").directive("multiselect",["$compile",function(e){"use strict";return{restrict:"E",scope:{items:"=",select:"=selectfcn",init:"=initfcn",id:"=wikiid"},link:function(n,t,i){n.header="Select",n.disabled=!1,n.init(n.id);var r=angular.element("<multiselect-popup></multiselect-popup>");t.append(e(r)(n))}}}]).directive("multiselectPopup",["$document",function(e){"use strict";return{restrict:"E",scope:!1,replace:!0,templateUrl:"templates/multiselect.html",link:function(e,n,t){e.isVisible=!1,e.toggleSelect=function(){console.log("multiselectPopup.toggleSelect()"),e.open=!e.open}}}}]),angular.module("genres").run(function(){}),angular.module("genres").factory("GenreService",["$http","$q","$log",function(e,n,t){"use strict";return{get:function(t){var i="/wiki/"+t+"/genres",r=n.defer();return e({method:"GET",url:i}).success(function(e,n,t,i){r.resolve(e)}).error(function(e,n,t,i){r.reject(n)}),r.promise},post:function(t,i){var r="/wiki/"+t+"/genres/post",o=n.defer(),s={};s[csrfTokenName]=csrfToken,s.id=i;var c=$.param(s);return console.log(s),e({method:"POST",url:r,data:c,headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(e,n,t,i){o.resolve(e)}).error(function(e,n,t,i){o.reject(n)}),o.promise},delete:function(t,i){var r="/wiki/"+t+"/genres/"+i+"/delete",o=n.defer(),s={};s[csrfTokenName]=csrfToken;var c=$.param(s);return console.log(s),e({method:"POST",url:r,data:c,headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(e,n,t,i){o.resolve(e)}).error(function(e,n,t,i){o.reject(n)}),o.promise},list:function(){var t=n.defer();return e({method:"GET",url:"/wiki/"}).success(function(e,n,i,r){t.resolve(e)}).error(function(e,n,i,r){t.reject(n)}),t.promise},update:function(t){var i="/wiki/"+t.id+"/",r=n.defer();return e({method:"PUT",url:i,data:t}).success(function(e,n,t,i){r.resolve(e)}).error(function(e,n,t,i){r.reject(n)}),r.promise},save:function(t){var i=n.defer();return e({method:"POST",url:"/wiki/",data:t}).success(function(e,n,t,r){i.resolve(e)}).error(function(e,n,t,r){i.reject(n)}),i.promise}}}]).factory("AuthService",["$http","$q",function(e,n){"use strict";return{get:function(){var t=n.defer();return e({method:"GET",url:"/user/login/isGuest"}).success(function(e,n,i,r){t.resolve(e)}).error(function(e,n,i,r){t.reject(n)}),t.promise}}}]),angular.module("genres").run(["$templateCache",function(e){e.put("templates/feedlist.html",'<ul> <li ng-repeat="topic in topics"> {{ topic.title }} </li> </ul> '),e.put("templates/multiselect.html",'<ul class="nav nav-pills nav-pills-links">  <li> <span><b>Genres: </b></span> <span ng-repeat="i in items | filter:{ active: true }"> <a href="/analysis/genres/{{ i.name_url }}">{{i.name}}</a>{{$last ? \'.&nbsp;\' : \', \'}} </span> </li> <li> [<span href=# class=text-primary data-toggle=dropdown role=button aria-haspopup=true aria-expanded=false>Add/Edit <span class=caret></span> </span>]  <ul class=dropdown-menu> <li ng-repeat="i in items"> <a ng-click="select(id, i)"> <i ng-class="{ \'icon-check-empty\': !i.active && !i.loading, \'icon-check\': i.active && !i.loading, \'icon-spinner animate-spin\': i.loading }"></i> {{ i.name }} </a> </li> </ul> </li> </ul> ')}]);